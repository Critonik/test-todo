{"version":3,"sources":["components/Filter/Filter.tsx","components/ToDoItem/ToDoItem.tsx","components/Input/Input.tsx","sorter/sorter.ts","App.tsx","index.tsx"],"names":["EFilterState","ToDoItem","title","deleteAction","status","doneAction","num","isGarbage","className","data-done","data-garbage","onClick","Input","onFinish","useState","value","setValue","onEnter","useCallback","e","key","onChange","target","onKeyDown","Filter","callBack","OFFLINE","filterState","setFilterState","data-state","ASC","DESC","sorterDesc","item","sorterASC","saveTodos","saveGarbage","App","items","setItems","garbage","setGarbage","saveStateBeforeUnload","localStorage","setItem","JSON","stringify","useEffect","undefined","window","addEventListener","getItem","parsedData","parse","console","log","setStateOnUnmount","removeEventListener","markAsDone","id","newItems","removeTask","oldItems","oldGarbage","deletedItems","splice","push","restoreItem","restoreItems","text","type","sortAsc","sort","sortDesc","map","idx","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc1e03ca.chunk.js","sourcesContent":["import './Filter.scss';\r\nimport React, { useState } from 'react';\r\n\r\ninterface IFilter {\r\n    callBack: (type: string) => void;\r\n}\r\n\r\nenum EFilterState {\r\n    OFFLINE = 'OFFLINE',\r\n    ASC = 'ASC',\r\n    DESC = 'DESC'\r\n}\r\n\r\nconst Filter: React.FC<IFilter> = ({callBack}) => {\r\n\r\n    const [filterState, setFilterState] = useState<EFilterState>(EFilterState.OFFLINE);\r\n\r\n    const onClick = () => {\r\n        switch (filterState) {\r\n            case EFilterState.ASC:\r\n                setFilterState(EFilterState.DESC);\r\n                callBack(EFilterState.DESC);\r\n                break;\r\n            case EFilterState.DESC:\r\n                setFilterState(EFilterState.OFFLINE);\r\n                callBack(EFilterState.OFFLINE);\r\n                break;\r\n            case EFilterState.OFFLINE:\r\n                setFilterState(EFilterState.ASC);\r\n                callBack(EFilterState.ASC);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'filter-wrapper'}>\r\n            <button\r\n                className={'filter-button'}\r\n                data-state={filterState}\r\n                onClick={onClick}\r\n            >\r\n                Filter {filterState}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport './ToDoItem.scss';\r\n\r\ninterface IItem {\r\n    title: string;\r\n    status: boolean;\r\n    doneAction: (id: number) => void;\r\n    deleteAction: (id: number) => void;\r\n    num: number;\r\n    isGarbage?: boolean;\r\n}\r\n\r\nconst ToDoItem: React.FC<IItem> = ({title, deleteAction, status, doneAction, num, isGarbage}) => {\r\n    return (\r\n        <div className={'item-body'}\r\n             data-done={status}\r\n             data-garbage={isGarbage}\r\n        >\r\n            <span className={'item-count'}>{num}</span>\r\n            <p className={'item-title'}>{title}</p>\r\n            <div className={'button-wrapper'}>\r\n                {\r\n                    isGarbage\r\n                        ? <button\r\n                            className={'action-button renew-button'}\r\n                            onClick={() => doneAction(num - 1)}\r\n                        />\r\n                        : <>\r\n                            <button\r\n                                className={'action-button done-button'}\r\n                                onClick={() => doneAction(num - 1)}\r\n                            />\r\n                            <button\r\n                                className={'action-button delete-button'}\r\n                                onClick={() => deleteAction(num - 1)}\r\n                            />\r\n                        </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ToDoItem","import React, { useCallback, useState } from 'react';\r\nimport './Input.scss'\r\n\r\ninterface IInput {\r\n    onFinish: (text: string) => void;\r\n}\r\n\r\nconst Input: React.FC<IInput> = ({onFinish}) => {\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onEnter = useCallback((e: React.KeyboardEvent) => {\r\n        if (e.key === 'Enter') {\r\n            if (value) {\r\n                onFinish(value);\r\n                setValue('');\r\n            }\r\n        }\r\n    }, [onFinish, value]);\r\n\r\n    return (\r\n        <div className={'input-wrapper'}>\r\n            <p className={'input-title'}>Enter task</p>\r\n            <input\r\n                className={'input-field'}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onKeyDown={onEnter}\r\n                value={value}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import { IToDoItem } from '../types/ITodoItem';\r\n\r\nexport const sorterDesc = (item: IToDoItem) => {\r\n    return item.status ? 1 : -1\r\n}\r\n\r\nexport const sorterASC = (item: IToDoItem) => {\r\n    return  item.status ? -1 : 1\r\n}","import React, { useEffect, useState } from 'react';\nimport ToDoItem from './components/ToDoItem/ToDoItem';\nimport Input from './components/Input/Input';\nimport { IToDoItem } from './types/ITodoItem';\nimport './App.scss';\nimport Filter from './components/Filter/Filter';\nimport { sorterASC, sorterDesc } from './sorter/sorter';\n\nlet saveTodos: IToDoItem[] = [];\nlet saveGarbage: IToDoItem[] = [];\n\nconst App: React.FC = () => {\n\n    const [items, setItems] = useState<IToDoItem[]>([]);\n    const [garbage, setGarbage] = useState<IToDoItem[]>([]);\n\n    const saveStateBeforeUnload = () => {\n        localStorage.setItem('todos', JSON.stringify(saveTodos));\n        localStorage.setItem('garbage', JSON.stringify(saveGarbage));\n    }\n\n\n    useEffect(() => {\n        if (window !== undefined) {\n            window.addEventListener('beforeunload', saveStateBeforeUnload);\n            window.addEventListener('unload', saveStateBeforeUnload);\n        }\n        const setStateOnUnmount = () => {\n            const items = localStorage.getItem('todos');\n            const garbage = localStorage.getItem('garbage');\n            if (items) {\n                try {\n                    const parsedData = JSON.parse(items);\n                    setItems(parsedData);\n                    saveTodos = parsedData;\n                } catch (e) {\n                    console.log('failed')\n                }\n            }\n            if (garbage) {\n                try {\n                    const parsedData = JSON.parse(garbage);\n                    setGarbage(parsedData);\n                    saveGarbage = parsedData;\n                } catch (e) {\n                    console.log('failed')\n                }\n            }\n        }\n        setStateOnUnmount();\n        return () => {\n            if (window !== undefined) {\n                window.removeEventListener('beforeunload', saveStateBeforeUnload);\n                window.removeEventListener('unload', saveStateBeforeUnload);\n            }\n        }\n    }, []); // eslint-disable-line\n\n    const filterFunc = (type: string) => {\n        switch (type) {\n            case 'ASC':\n                const sortAsc = [...items].sort(sorterASC);\n                setItems(sortAsc);\n                break;\n            case 'DESC':\n                const sortDesc = [...items].sort(sorterDesc);\n                setItems(sortDesc);\n                break;\n            case 'OFFLINE':\n            default:\n                setItems([...saveTodos]);\n                break;\n        }\n    }\n\n\n    const addNewItem = (text: string) => {\n        const newItems = [...items];\n        newItems.push({\n            title: text,\n            status: false\n        });\n        setItems(newItems);\n        saveTodos = newItems;\n    }\n\n    const markAsDone = (id: number) => {\n        const newItems = [...items];\n        newItems[id].status = !newItems[id].status;\n        setItems(newItems);\n        saveTodos = newItems\n    }\n\n    const removeTask = (id: number) => {\n        const oldItems = [...items];\n        const oldGarbage = [...garbage];\n        const deletedItems = oldItems.splice(id, 1);\n        oldGarbage.push(...deletedItems);\n        setItems(oldItems);\n        setGarbage(oldGarbage);\n        saveTodos = oldItems;\n        saveGarbage = oldGarbage;\n    }\n\n    const restoreItem = (id: number) => {\n        const oldItems = [...items];\n        const oldGarbage = [...garbage];\n        const restoreItems = oldGarbage.splice(id, 1);\n        oldItems.push(...restoreItems);\n        setItems(oldItems);\n        setGarbage(oldGarbage);\n        saveTodos = oldItems;\n        saveGarbage = oldGarbage;\n    }\n\n\n\n    const createItems = (item: IToDoItem, idx: number) => {\n        return (\n            <ToDoItem\n                title={item.title}\n                status={item.status}\n                doneAction={markAsDone}\n                deleteAction={removeTask}\n                key={idx}\n                num={idx + 1}\n            />\n        )\n    }\n\n\n    const createGarbageItem = (item: IToDoItem, idx: number) => {\n        return (\n            <ToDoItem\n                title={item.title}\n                status={item.status}\n                doneAction={restoreItem}\n                deleteAction={() => null}\n                key={idx}\n                num={idx + 1}\n                isGarbage={true}\n            />\n        )\n    }\n\n    const clearGarbage = () => {\n        setGarbage([]);\n        saveGarbage = [];\n    }\n\n    return (\n        <div className=\"App\">\n            <h1 className={'app-title'}>Todo list</h1>\n            <section className={'item-wrapper'}>\n                <Input onFinish={addNewItem}/>\n                <Filter\n                    callBack={filterFunc}\n                />\n                {items.map(createItems)}\n            </section>\n            <h1 className={'app-title'}>Deleted</h1>\n            <section className={'item-wrapper'}>\n                <button\n                    className={'reset-button'}\n                    onClick={clearGarbage}\n                >\n                    Remove all\n                </button>\n                {garbage.map(createGarbageItem)}\n            </section>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}